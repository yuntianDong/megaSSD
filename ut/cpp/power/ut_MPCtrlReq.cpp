/*
 * file : ut_MPCtrlReq.cpp
 */

#include<iostream>
using namespace std;
#include<gtest/gtest.h>

#include "power/MPCtrlReq.h"
#include "Logging.h"

uint8_t EXP_SEQ_GETPOWERID[]	= {0x55,0x0D,0x60,0x00,0x00,0x55,0x00,0x00,0x20,0x00,0x33,0x5B,0x9B};
uint8_t EXP_SEQ_SETPOWERID[]	= {0x55,0x2C,0x60,0x00,0x00,0x33,0x00,0x00,0x20,0x45,0x31,0x54,0x31,\
		0x30,0x39,0x30,0x30,0x34,0x30,0x30,0x34,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x02,0xB9};
uint8_t EXP_SEQ_POWERON[]		= {0x55,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x01,0x55,0x33,0x77,0x6B};
uint8_t EXP_SEQ_POWEROFF[]		= {0x55,0x0D,0x20,0x00,0x00,0x00,0x00,0x00,0x01,0x33,0x33,0xD6,0xE7};
uint8_t EXP_SEQ_DETECTDEVICE[]	= {0x55,0x0D,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x49,0x34};
uint8_t EXP_SEQ_GETTEMP[]		= {0x55,0x0D,0x50,0x00,0x48,0x00,0x00,0x00,0x00,0x00,0x33,0x54,0x8B};
uint8_t EXP_SEQ_GETFWREV[]		= {0x55,0x0D,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0xBD,0x36};
uint8_t EXP_SEQ_WREEPROM[]		= {0x55,0x20,0x10,0x00,0x53,0x33,0x00,0x00,0x14,0x45,0x31,0x54,0x31,\
		0x30,0x39,0x30,0x30,0x34,0x30,0x30,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0xEE,0x42};

uint8_t TEST_SETPOWERID_DATUM[]	= {0x45,0x31,0x54,0x31,0x30,0x39,0x30,0x30,0x34,0x30,0x30,0x34,0x00,0x00,0x00,0x00,\
								   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
uint8_t TEST_WREEPROM_DATUM[]	= {0x45,0x31,0x54,0x31,0x30,0x39,0x30,0x30,0x34,0x30,0x30,0x31,0x00,0x00,0x00,0x00,\
		0x00,0x00,0x00,0x00};


#define COMP2SEQ(a,b,c)	\
	for(uint8_t idx=0;idx<c;idx++)	\
	{	\
		EXPECT_EQ(a[idx],b[idx]);	\
	}	\

class ut_MPCtrlReq  : public testing::Test
{
};

TEST_F(ut_MPCtrlReq,CheckReqGetPowerID)
{
	ReqGetPowerID req;

	uint8_t* actDatum = req.GetMPCReqData();
	uint8_t  actDLen  = req.GetMPCReqLen();

	COMP2SEQ(actDatum,EXP_SEQ_GETPOWERID,actDLen);
	req.Dump();
	req.DumpHex();
}

TEST_F(ut_MPCtrlReq,CheckSeqSetPowerID)
{
	ReqSetPowerID req;

	req.SetDatum(TEST_SETPOWERID_DATUM,sizeof(TEST_SETPOWERID_DATUM));

	uint8_t* actDatum = req.GetMPCReqData();
	uint8_t  actDLen  = req.GetMPCReqLen();

	COMP2SEQ(actDatum,EXP_SEQ_SETPOWERID,actDLen);
	req.Dump();
	req.DumpHex();
}

TEST_F(ut_MPCtrlReq,CheckPowerOn)
{
	ReqPowerOn	req;
	uint8_t* actDatum = req.GetMPCReqData();
	uint8_t  actDLen  = req.GetMPCReqLen();

	COMP2SEQ(actDatum,EXP_SEQ_POWERON,actDLen);
	req.Dump();
	req.DumpHex();
}

TEST_F(ut_MPCtrlReq,CheckPowerOff)
{
	ReqPowerOff	req;
	uint8_t* actDatum = req.GetMPCReqData();
	uint8_t  actDLen  = req.GetMPCReqLen();

	COMP2SEQ(actDatum,EXP_SEQ_POWEROFF,actDLen);
	req.Dump();
	req.DumpHex();
}

TEST_F(ut_MPCtrlReq,CheckDetectDevice)
{
	ReqDetectDevice req;
	uint8_t* actDatum = req.GetMPCReqData();
	uint8_t  actDLen  = req.GetMPCReqLen();

	COMP2SEQ(actDatum,EXP_SEQ_DETECTDEVICE,actDLen);
	req.Dump();
	req.DumpHex();
}

TEST_F(ut_MPCtrlReq,CheckGetTemp)
{
	ReqGetTemp req;
	uint8_t* actDatum = req.GetMPCReqData();
	uint8_t  actDLen  = req.GetMPCReqLen();

	COMP2SEQ(actDatum,EXP_SEQ_GETTEMP,actDLen);
	req.Dump();
	req.DumpHex();
}

TEST_F(ut_MPCtrlReq,CheckGetFWRev)
{
	ReqGetFWRev req;
	uint8_t* actDatum = req.GetMPCReqData();
	uint8_t  actDLen  = req.GetMPCReqLen();

	COMP2SEQ(actDatum,EXP_SEQ_GETFWREV,actDLen);
	req.Dump();
	req.DumpHex();
}

TEST_F(ut_MPCtrlReq,CheckGetWrEEPROM)
{
	ReqWrEEPPROM req;
	req.SetRegAddr(0);
	req.SetDatum(TEST_WREEPROM_DATUM,sizeof(TEST_WREEPROM_DATUM));

	uint8_t* actDatum = req.GetMPCReqData();
	uint8_t  actDLen  = req.GetMPCReqLen();

	COMP2SEQ(actDatum,EXP_SEQ_WREEPROM,actDLen);
	req.Dump();
	req.DumpHex();
}
